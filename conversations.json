{
    "basePath": "/data",
    "definitions": {
        "ApiResponse": {
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "##default"
            }
        },
        "Category": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Category"
            }
        },
        "Order": {
            "properties": {
                "complete": {
                    "type": "boolean"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "petId": {
                    "format": "int64",
                    "type": "integer"
                },
                "quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "shipDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ],
                    "type": "string"
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "Reviews": {
            "properties": {
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "example": "doggie",
                    "type": "string"
                },
                "photoUrls": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "xml": {
                        "name": "photoUrl",
                        "wrapped": true
                    }
                },
                "status": {
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ],
                    "type": "string"
                },
                "tags": {
                    "items": {
                        "$ref": "#/definitions/Tag"
                    },
                    "type": "array",
                    "xml": {
                        "name": "tag",
                        "wrapped": true
                    }
                }
            },
            "required": [
                "name",
                "photoUrls"
            ],
            "xml": {
                "name": "Pet"
            }
        },
        "Tag": {
            "properties": {
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "User": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "description": "User Status",
                    "format": "int32",
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
    },
    "host": "stg.api.bazaarvoice.com",
    "info": {
        "contact": {
            "email": "DeveloperAdvocate@bazaarvoice.com"
        },
        "description": "This is the BazaarVoice Conversations API.  You can find out more about it at <a href=\"https://developer.bazaarvoice.com/apis/conversations/\">https://developer.bazaarvoice.com/apis/conversations/</a>.",
        "license": {
            "name": "BazaarVoice Terms of Service",
            "url": "https://developer.bazaarvoice.com/terms"
        },
        "termsOfService": "https://developer.bazaarvoice.com/terms",
        "title": "BazaarVoice Conversations API ",
        "version": "5.4"
    },
    "paths": {
        "/reviews.json": {
            "get": {
                "description": "Get Reviews for a given passKey",
                "operationId": "requestReviews",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "description": "Value of API Key",
                        "in": "query",
                        "name": "passkey",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "multi",
                        "description": "Version of API",
                        "in": "query",
                        "name": "apiVersion",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Pet"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid tag value"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write:pets",
                            "read:pets"
                        ]
                    }
                ],
                "summary": "Finds Reviews by PassKey",
                "tags": [
                    "Reviews"
                ]
            }
        }
    },
    "schemes": [
        "http",
        "https"
    ],
    "securityDefinitions": {
        "api_key": {
            "in": "header",
            "name": "api_key",
            "type": "apiKey"
        },
        "petstore_auth": {
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "read:pets": "read your pets",
                "write:pets": "modify pets in your account"
            },
            "type": "oauth2"
        }
    },
    "swagger": "2.0",
    "tags": [
        {
            "description": "Reviews",
            "externalDocs": {
                "description": "Find out more about Reviews",
                "url": "https://developer.bazaarvoice.com/docs/read/conversations/reviews"
            },
            "name": "reviews"
        }
    ]
}